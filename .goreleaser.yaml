# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.BuildDate={{.Date}}
      - -X main.GitRepo={{.Version}}
      - -X main.BuiltBy=goreleaser
      - -X main.CommitDate={{.CommitTimestamp}}
      - -X main.LatestCommit={{.Commit}}
      - -X main.Branch={{.Version}}
      - -X main.Version={{.Version}}

    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

        # List of combinations of GOOS + GOARCH + GOARM to ignore.
      # Default is empty.
    ignore:
      - goos: linux
        goarch: arm
        goarm: 7
      - goarm: mips64
      - gomips: hardfloat
      - goamd64: v4

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'



dockers:
  - image_templates: ["ghcr.io/alexj212/{{ .ProjectName }}:{{ .Version }}-amd64"]
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description={{ .ProjectName }}
      - --label=org.opencontainers.image.url=https://github.com/alexj212/{{ .ProjectName }}
      - --label=org.opencontainers.image.source=https://github.com/alexj212/{{ .ProjectName }}
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.created={{ time "2006-01-02T15:04:05Z07:00" }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT
  - image_templates: ["ghcr.io/alexj212/{{ .ProjectName }}:{{ .Version }}-arm64v8"]
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - --platform=linux/arm64/v8
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description={{ .ProjectName }}
      - --label=org.opencontainers.image.url=https://github.com/alexj212/{{ .ProjectName }}
      - --label=org.opencontainers.image.source=https://github.com/alexj212/{{ .ProjectName }}
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.created={{ time "2006-01-02T15:04:05Z07:00" }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT
docker_manifests:
  - name_template: ghcr.io/alexj212/{{ .ProjectName }}:{{ .Version }}
    image_templates:
      - ghcr.io/alexj212/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/alexj212/{{ .ProjectName }}:{{ .Version }}-arm64v8
  - name_template: ghcr.io/alexj212/{{ .ProjectName }}:latest
    image_templates:
      - ghcr.io/alexj212/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/alexj212/{{ .ProjectName }}:{{ .Version }}-arm64v8


# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
